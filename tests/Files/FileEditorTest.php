<?php


use EMedia\PHPHelpers\Exceptions\FileSystem\SectionAlreadyExistsException;
use EMedia\PHPHelpers\Files\FileEditor;
use PHPUnit\Framework\TestCase;

class FileEditorTest extends TestCase
{

    private static $file = '_file.txt';
    private static $fileContent = 'foo';
    private static $stub = '_stub.txt';
    private static $stubContent = 'bar';

    protected function setUp()
    {
        parent::setUp();

        file_put_contents(static::$file, static::$fileContent);
        file_put_contents(static::$stub, static::$stubContent);
    }

    protected function tearDown()
    {
        unlink(static::$file);
        unlink(static::$stub);

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function test_FileEditor_appendStub_appends_stub_to_file_content()
    {
        $this->assertEquals(static::$fileContent, file_get_contents(static::$file));
        FileEditor::appendStub('_file.txt', '_stub.txt');

        $fileContent = static::$fileContent;
        $stubContent = static::$stubContent;

        $this->assertEquals("{$fileContent}\r\n{$stubContent}", file_get_contents(static::$file));
    }

    /**
     * @test
     */
    public function test_FileEditor_appendStubIfSectionNotFound_appends_without_section()
    {
        $this->assertEquals(static::$fileContent, file_get_contents(static::$file));
        FileEditor::appendStubIfSectionNotFound('_file.txt', '_stub.txt');

        $fileContent = static::$fileContent;
        $stubContent = static::$stubContent;

        $this->assertEquals("{$fileContent}\r\n{$stubContent}", file_get_contents(static::$file));
    }

    /**
     * @test
     */
    public function test_FileEditor_appendStubIfSectionNotFound_appends_even_if_section_exists()
    {
        $this->assertEquals(static::$fileContent, file_get_contents(static::$file));
        FileEditor::appendStubIfSectionNotFound('_file.txt', '_stub.txt', static::$fileContent);

        $fileContent = static::$fileContent;
        $stubContent = static::$stubContent;

        $this->assertEquals("{$fileContent}\r\n{$stubContent}", file_get_contents(static::$file));
    }

    /**
     * @test
     * @throws
     */
    public function test_FileEditor_appendStubIfSectionNotFound_confirms_duplicate_section()
    {
        $this->assertEquals(static::$fileContent, file_get_contents(static::$file));

        $this->expectException(SectionAlreadyExistsException::class);
        FileEditor::appendStubIfSectionNotFound('_file.txt', '_stub.txt', static::$fileContent, null, true);
    }

}